# Automatiza√ß√£o da Agenda Tribut√°ria
# Este script cria automaticamente as tarefas do pr√≥ximo m√™s

Write-Host "ü§ñ AUTOMA√á√ÉO DA AGENDA TRIBUT√ÅRIA" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Cyan

# Navegar para o diret√≥rio correto
$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition
$backendPath = Join-Path $scriptPath "backend"

if (-not (Test-Path $backendPath)) {
    Write-Host "‚ùå Diret√≥rio backend n√£o encontrado: $backendPath" -ForegroundColor Red
    exit 1
}

Set-Location $backendPath

# Obter data atual e calcular pr√≥ximo m√™s
$dataAtual = Get-Date
$proximoMes = $dataAtual.AddMonths(1)
$ano = $proximoMes.Year
$mes = $proximoMes.Month

Write-Host ""
Write-Host "üìÖ Data atual: $($dataAtual.ToString('dd/MM/yyyy'))" -ForegroundColor Yellow
Write-Host "üìÖ Pr√≥ximo m√™s: $mes/$ano" -ForegroundColor Green
Write-Host ""

# Verificar se Node.js est√° dispon√≠vel
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js dispon√≠vel: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n√£o encontrado. Instale o Node.js primeiro." -ForegroundColor Red
    exit 1
}

# Verificar se o script existe
$scriptFile = "scripts/agenda-tributaria-api.js"
if (-not (Test-Path $scriptFile)) {
    Write-Host "‚ùå Script n√£o encontrado: $scriptFile" -ForegroundColor Red
    exit 1
}

Write-Host "üîÑ Executando cria√ß√£o de tarefas..." -ForegroundColor Cyan

try {
    # Executar o script de cria√ß√£o de tarefas
    $resultado = & node $scriptFile criar-mes $ano $mes 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ SUCESSO! Tarefas criadas para $mes/$ano" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã Output do script:" -ForegroundColor Yellow
        $resultado | ForEach-Object { Write-Host "   $_" -ForegroundColor White }
    } else {
        Write-Host "‚ùå ERRO na execu√ß√£o do script" -ForegroundColor Red
        Write-Host "üìã Output do erro:" -ForegroundColor Yellow
        $resultado | ForEach-Object { Write-Host "   $_" -ForegroundColor Red }
    }
} catch {
    Write-Host "‚ùå ERRO ao executar o script: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Write-Host "‚ú® Automa√ß√£o finalizada!" -ForegroundColor Cyan

# Opcional: Pausar para ver o resultado (remover em produ√ß√£o)
if ($Host.Name -eq "ConsoleHost") {
    Write-Host "Pressione qualquer tecla para continuar..." -ForegroundColor Gray
    $null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
}
